import com.rendox.routinetracker.core.database.model.schedule.ScheduleType;
import kotlin.Boolean;
import kotlin.Int;
import kotlinx.datetime.DayOfWeek;
import kotlinx.datetime.LocalDate;

CREATE TABLE scheduleEntity (
    id INTEGER NOT NULL PRIMARY KEY,
    type TEXT AS ScheduleType NOT NULL,
    startDate INTEGER AS LocalDate NOT NULL,
    endDate INTEGER AS LocalDate,
    backlogEnabled INTEGER AS Boolean NOT NULL,
    cancelDuenessIfDoneAhead INTEGER AS Boolean NOT NULL,
    startDayOfWeekInWeeklySchedule INTEGER AS DayOfWeek,
    startFromHabitStartInMonthlyAndAnnualSchedule INTEGER AS Boolean,
    includeLastDayOfMonthInMonthlySchedule INTEGER AS Boolean,
    periodicSeparationEnabledInPeriodicSchedule INTEGER AS Boolean,
    numOfDueDaysInByNumOfDueDaysSchedule INTEGER AS Int,
    numOfDueDaysInFirstPeriodInByNumOfDueDaysSchedule INTEGER AS Int,
    numOfDaysInAlternateDaysSchedule INTEGER AS Int,
    FOREIGN KEY (id) REFERENCES habitEntity(id) ON DELETE CASCADE
);

insertSchedule:
INSERT INTO scheduleEntity
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

getScheduleById:
SELECT *
FROM scheduleEntity
WHERE id = ?;

deleteSchedule:
DELETE FROM scheduleEntity
WHERE id = ?;

lastInsertRowId:
SELECT last_insert_rowid();